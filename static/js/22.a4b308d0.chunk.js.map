{"version":3,"file":"static/js/22.a4b308d0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const FormInput = styled.input`\n  width: auto;\n  height: 25px;\n  margin-left: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => `${p.theme.borders.normal} ${p.theme.colors.steelBlue}`};\n  background-color: ${p => p.theme.colors.snow};\n\n  &:focus {\n    outline: transparent;\n  }\n`;\n\nexport const ButtonAddContact = styled.button`\n  width: 85px;\n  height: auto;\n\n  font-size: ${p => p.theme.fontSizes.xs};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.none};\n  background-color: ${p => p.theme.colors.steelBlue};\n  color: ${p => p.theme.colors.royalBlue};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.royalBlue};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\nimport { useState } from 'react';\nimport { Form, FormInput, ButtonAddContact } from './ContactForm.styled';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectAllContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n    handleCheck(newContact);\n    reset();\n  };\n\n  const handleCheck = newContact => {\n    contactList.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    )\n      ? toast.error(`${name} is already in contacts`)\n      : dispatch(addContact(newContact));\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <ButtonAddContact type=\"submit\">Add contact</ButtonAddContact>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n`;\n\nexport const ListTitle = styled.p`\n  margin-top: ${p => p.theme.space[5]}px;\n`;\n\nexport const ContactItem = styled.p`\n  font-style: italic;\n  color: ${p => p.theme.colors.royalBlue};\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-top: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const ButtonDelete = styled.button`\n  width: 85px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.xs};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.none};\n  background-color: ${p => p.theme.colors.steelBlue};\n  color: ${p => p.theme.colors.royalBlue};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.royalBlue};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import {\n  List,\n  ListItem,\n  ListTitle,\n  ButtonDelete,\n  ContactItem,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contactsList = useSelector(selectAllContacts);\n  const filterName = useSelector(selectFilter);\n\n  const filteredContacts = contactsList.filter(contact =>\n    contact.name.toLowerCase().includes(filterName.toLowerCase())\n  );\n\n  return (\n    <List>\n      <ListTitle>\n        {filteredContacts.length === 0\n          ? 'We didn`t find contacts your request 😭'\n          : `You have ${filteredContacts.length} contacts`}\n      </ListTitle>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ContactItem>\n            {name}: {number}\n          </ContactItem>\n          <ButtonDelete\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </ButtonDelete>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <h1>Contacts</h1>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","Form","styled","FormInput","p","theme","space","radii","normal","borders","colors","steelBlue","snow","ButtonAddContact","fontSizes","xs","none","royalBlue","white","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contactList","useSelector","handleChange","event","target","value","handleCheck","newContact","find","contact","toLowerCase","toast","addContact","reset","onSubmit","preventDefault","id","nanoid","autoComplete","type","pattern","title","required","onChange","List","ListTitle","ContactItem","ListItem","s","ButtonDelete","ContactList","contactsList","filterName","filteredContacts","includes","length","map","onClick","deleteContact","Contacts","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}