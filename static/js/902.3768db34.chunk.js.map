{"version":3,"file":"static/js/902.3768db34.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.isloading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectAllContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  max-width: 100%;\n`;\n\nexport const FormInput = styled.input`\n  width: auto;\n  height: 25px;\n  text-align: center;\n  margin-left: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => `${p.theme.borders.normal} ${p.theme.colors.steelBlue}`};\n  background-color: ${p => p.theme.colors.snow};\n  color: ${p => p.theme.colors.darkBlue};\n  cursor: pointer;\n\n  &:focus {\n    outline: transparent;\n    border: ${p => `${p.theme.borders.bigSize} ${p.theme.colors.steelBlue}`};\n  }\n`;\n\nexport const FormLabel = styled.label`\n  color: ${p => p.theme.colors.darkBlue};\n`;\n\nexport const ButtonAddContact = styled.button`\n  width: 85px;\n  height: auto;\n  cursor: pointer;\n  font-size: ${p => p.theme.fontSizes.xs};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.none};\n  background-color: ${p => p.theme.colors.steelBlue};\n  color: ${p => p.theme.colors.royalBlue};\n  transition: all 0.25s;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.royalBlue};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\nimport { useState } from 'react';\nimport {\n  Form,\n  FormInput,\n  ButtonAddContact,\n  FormLabel,\n} from './ContactForm.styled';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectAllContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n    handleCheck(newContact);\n    reset();\n  };\n\n  const handleCheck = newContact => {\n    contactList.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    )\n      ? toast.error(`${name} is already in contacts`)\n      : dispatch(addContact(newContact));\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </FormLabel>\n\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </FormLabel>\n      <ButtonAddContact type=\"submit\">Add contact</ButtonAddContact>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListTitle = styled.p`\n  margin-top: ${p => p.theme.space[6]}px;\n`;\n\nexport const ContactItem = styled.p`\n  font-style: italic;\n  color: ${p => p.theme.colors.royalBlue};\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: ${p => p.theme.fontSizes.s};\n  padding: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => `${p.theme.borders.normal} ${p.theme.colors.steelBlue}`};\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  width: 85px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.xs};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.none};\n  background-color: ${p => p.theme.colors.steelBlue};\n  color: ${p => p.theme.colors.royalBlue};\n  cursor: pointer;\n  transition: all 0.25s;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.royalBlue};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import {\n  ListItem,\n  ListTitle,\n  ButtonDelete,\n  ContactItem,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul>\n      <ListTitle>\n        {filteredContacts.length === 0 ? (\n          <p style={{ marginTop: '30px', color: '#0b4779' }}>\n            We didn`t find contacts your request 😭\n          </p>\n        ) : (\n          <p style={{ marginTop: '30px', color: 'rgb(145 37 0)' }}>\n            {`You have ${filteredContacts.length} contacts`}\n          </p>\n        )}\n      </ListTitle>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ContactItem>\n            {name}: {number}\n          </ContactItem>\n          <ButtonDelete\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </ButtonDelete>\n        </ListItem>\n      ))}\n    </ul>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: ${p => p.theme.space[5]}px;\n`;\n\nexport const FilterLabel = styled.label`\n  color: ${p => p.theme.colors.darkBlue};\n`;\n\nexport const FilterInput = styled.input`\n  width: auto;\n  height: 25px;\n  text-align: center;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => `${p.theme.borders.normal} ${p.theme.colors.steelBlue}`};\n  margin-left: ${p => p.theme.space[4]}px;\n  background-color: ${p => p.theme.colors.snow};\n  color: ${p => p.theme.colors.darkBlue};\n\n  cursor: pointer;\n\n  &:focus {\n    outline: transparent;\n    border: ${p => `${p.theme.borders.bigSize} ${p.theme.colors.steelBlue}`};\n  }\n`;\n","import { FilterInput, FilterLabel, FilterForm } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setContactsFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const input = useSelector(selectFilter);\n\n  const handleFilter = event => {\n    const value = event.target.value;\n    dispatch(setContactsFilter(value));\n  };\n\n  return (\n    <FilterForm>\n      <FilterLabel>\n        Find contact by name\n        <FilterInput type=\"text\" value={input} onChange={handleFilter} />\n      </FilterLabel>\n    </FilterForm>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const contacts = useSelector(selectAllContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && <Loader />}\n      {contacts.length > 0 && <Filter />}\n      {contacts.length === 0 ? (\n        <p style={{ marginTop: '30px', color: '#0b4779' }}>\n          <b>Your contacts are empty, let`s create them 🚀</b>\n        </p>\n      ) : (\n        <ContactList />\n      )}\n    </div>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectLoading","state","contacts","isloading","selectAllContacts","items","selectFilter","filter","selectFilteredContacts","contact","toLowerCase","includes","Form","styled","FormInput","p","theme","space","radii","normal","borders","colors","steelBlue","snow","darkBlue","bigSize","FormLabel","ButtonAddContact","fontSizes","xs","none","royalBlue","white","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","contactList","useSelector","handleChange","event","target","handleCheck","newContact","toast","addContact","reset","onSubmit","preventDefault","id","nanoid","autoComplete","type","pattern","title","required","onChange","ListTitle","ContactItem","ListItem","s","ButtonDelete","ContactList","filteredContacts","style","marginTop","color","onClick","deleteContact","FilterForm","FilterLabel","FilterInput","Filter","input","setContactsFilter","Contacts","isLoading","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}